# Chroot Configuration File
# Author: GitHub Copilot
# Version: 1.0

# Basic Configuration
CHROOT_DIR="/opt/secure_chroot"
CHROOT_NAME="secure_env"
LOG_FILE="/var/log/chroot_setup.log"

# User Configuration
DEFAULT_USER="chrootuser"
DEFAULT_SHELL="/bin/bash"
HOME_DIR_PERMISSIONS="700"

# System Configuration
AUTO_MOUNT_FILESYSTEMS="true"
CREATE_SYSTEMD_SERVICE="true"
ENABLE_NETWORK_ACCESS="false"

# Security Configuration
ALLOW_SUDO_IN_CHROOT="false"
COPY_SHADOW_FILE="true"
RESTRICT_DEVICE_ACCESS="true"
ENABLE_CHROOT_LOGGING="true"

# Binary Configuration - Essential binaries to copy
ESSENTIAL_BINARIES=(
    "/bin/bash"
    "/bin/sh" 
    "/bin/ls"
    "/bin/cat"
    "/bin/cp"
    "/bin/mv"
    "/bin/rm"
    "/bin/mkdir"
    "/bin/rmdir"
    "/bin/chmod"
    "/bin/chown"
    "/bin/ps"
    "/bin/grep"
    "/bin/sed"
    "/bin/awk"
    "/bin/sort"
    "/bin/uniq"
    "/bin/head"
    "/bin/tail"
    "/bin/wc"
    "/bin/find"
    "/usr/bin/whoami"
    "/usr/bin/id"
    "/usr/bin/passwd"
    "/usr/bin/su"
    "/usr/bin/nano"
    "/usr/bin/vi"
    "/usr/bin/less"
    "/usr/bin/more"
    "/usr/bin/which"
    "/usr/bin/whereis"
    "/usr/bin/file"
    "/usr/bin/basename"
    "/usr/bin/dirname"
)

# Optional binaries (can be enabled if needed)
OPTIONAL_BINARIES=(
    "/bin/mount"
    "/bin/umount"
    "/usr/bin/wget"
    "/usr/bin/curl"
    "/usr/bin/ssh"
    "/usr/bin/scp"
    "/usr/bin/rsync"
    "/usr/bin/tar"
    "/usr/bin/gzip"
    "/usr/bin/gunzip"
    "/usr/bin/zip"
    "/usr/bin/unzip"
    "/usr/bin/git"
    "/usr/bin/python3"
    "/usr/bin/perl"
    "/usr/bin/awk"
    "/usr/bin/node"
)

# Configuration files to copy
CONFIG_FILES=(
    "/etc/passwd"
    "/etc/group"
    "/etc/shadow"
    "/etc/hosts"
    "/etc/hostname" 
    "/etc/resolv.conf"
    "/etc/nsswitch.conf"
    "/etc/bash.bashrc"
    "/etc/profile"
)

# Directories to create in chroot
CHROOT_DIRECTORIES=(
    "bin"
    "sbin"
    "usr/bin"
    "usr/sbin"
    "usr/local/bin"
    "lib"
    "lib64"
    "usr/lib"
    "usr/lib64"
    "etc"
    "dev"
    "proc"
    "sys"
    "tmp"
    "var"
    "var/log"
    "var/tmp"
    "home"
    "root"
    "opt"
    "mnt"
    "media"
)

# Device files to create
DEVICE_FILES=(
    "null:c:1:3:666"
    "zero:c:1:5:666" 
    "random:c:1:8:644"
    "urandom:c:1:9:644"
    "tty:c:5:0:666"
    "console:c:5:1:600"
    "stdin:c:1:3:666"
    "stdout:c:1:3:666"
    "stderr:c:1:3:666"
)

# Mount points configuration
MOUNT_POINTS=(
    "proc:/proc:proc:rw,nosuid,nodev,noexec,relatime"
    "sysfs:/sys:sysfs:rw,nosuid,nodev,noexec,relatime"
    "devtmpfs:/dev:none:bind"
    "tmpfs:/tmp:tmpfs:rw,nosuid,nodev,size=100M"
)

# Environment variables for chroot
CHROOT_ENV=(
    "PATH=/usr/local/bin:/usr/bin:/bin"
    "HOME=/home"
    "USER=chrootuser"
    "SHELL=/bin/bash"
    "TERM=xterm"
    "LANG=en_US.UTF-8"
)

# Network configuration (if enabled)
NETWORK_INTERFACES=(
    "lo"
)

# Firewall rules for chroot (if network enabled)
FIREWALL_RULES=(
    "INPUT -i lo -j ACCEPT"
    "OUTPUT -o lo -j ACCEPT"
    "INPUT -j DROP"
    "OUTPUT -j DROP"
)

# Resource limits
RESOURCE_LIMITS=(
    "cpu:50"           # CPU percentage limit
    "memory:256M"      # Memory limit  
    "processes:50"     # Max processes
    "files:1000"       # Max open files
)

# Logging configuration
LOG_LEVEL="INFO"              # DEBUG, INFO, WARN, ERROR
LOG_ROTATION="daily"          # daily, weekly, monthly
LOG_RETENTION="30"            # days
AUDIT_COMMANDS="true"         # Log all commands executed in chroot

# Backup configuration
AUTO_BACKUP="false"
BACKUP_INTERVAL="daily"       # daily, weekly, monthly
BACKUP_RETENTION="7"          # number of backups to keep
BACKUP_LOCATION="/var/backups/chroot"

# Maintenance configuration
AUTO_CLEANUP="true"
CLEANUP_TEMP_FILES="true"
CLEANUP_LOG_FILES="true"
TEMP_FILE_AGE="7"            # days

# Advanced security options
ENABLE_SECCOMP="false"        # Enable seccomp filtering
ENABLE_CAPABILITIES="false"   # Enable Linux capabilities
DISABLE_SETUID="true"         # Disable setuid binaries
READONLY_ROOT="false"         # Make root filesystem read-only

# Development/Debug options
DEBUG_MODE="false"
VERBOSE_LOGGING="false"
PRESERVE_ENV="false"
ALLOW_CORE_DUMPS="false"
